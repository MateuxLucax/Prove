-- MySQL Script generated by MySQL Workbench
-- Fri Jun 14 21:02:50 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
-- -----------------------------------------------------
-- Schema prove_sistema_avaliacao
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema prove_sistema_avaliacao
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `prove_sistema_avaliacao` DEFAULT CHARACTER SET utf8 ;
USE `prove_sistema_avaliacao` ;

-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Serie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Serie` (
  `Codigo_Serie` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Codigo_Serie`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Disciplinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Disciplinas` (
  `Codigo_Disciplina` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(50) NOT NULL,
  `Serie_Codigo_Serie` INT NOT NULL,
  PRIMARY KEY (`Codigo_Disciplina`),
  INDEX `fk_Disciplinas_Serie1_idx` (`Serie_Codigo_Serie` ASC),
  CONSTRAINT `fk_Disciplinas_Serie1`
    FOREIGN KEY (`Serie_Codigo_Serie`)
    REFERENCES `prove_sistema_avaliacao`.`Serie` (`Codigo_Serie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Alunos` (
  `Matricula` VARCHAR(15) NOT NULL,
  `Nome` VARCHAR(100) NOT NULL,
  `Email` VARCHAR(100)  NULL,
  `Data_Nascimento` DATE NULL,
  `Ultimo_Login` DATETIME NULL,
  `Senha` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`Matricula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Professores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Professores` (
  `Matricula` VARCHAR(20) NOT NULL,
  `Nome` VARCHAR(100) NOT NULL,
  `Email` VARCHAR(100) NOT NULL,
  `Data_Nascimento` DATE NOT NULL,
  `Ultimo_Login` DATETIME NULL,
  `Senha` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`Matricula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Avaliacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Avaliacoes` (
  `Codigo_Avaliacao` INT NOT NULL AUTO_INCREMENT,
  `Conteudo` VARCHAR(50) NOT NULL,
  `Disciplina_Codigo_Disciplina` INT NOT NULL,
  `Data_Inicio` DATETIME NOT NULL,
  `Data_Fim` DATETIME NOT NULL,
  `Peso` VARCHAR(5) NULL,
  `Embaralhar` TINYINT NULL,
  PRIMARY KEY (`Codigo_Avaliacao`),
  INDEX `fk_Avaliacoes_Disciplina1_idx` (`Disciplina_Codigo_Disciplina` ASC),
  CONSTRAINT `fk_Avaliacoes_Disciplina1`
    FOREIGN KEY (`Disciplina_Codigo_Disciplina`)
    REFERENCES `prove_sistema_avaliacao`.`Disciplinas` (`Codigo_Disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Professores_has_Disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Professores_has_Disciplina` (
  `Professores_Matricula` VARCHAR(20) NOT NULL,
  `Disciplina_Codigo_Disciplina` INT NOT NULL,
  PRIMARY KEY (`Professores_Matricula`, `Disciplina_Codigo_Disciplina`),
  INDEX `fk_Professores_has_Disciplina_Disciplina1_idx` (`Disciplina_Codigo_Disciplina` ASC),
  INDEX `fk_Professores_has_Disciplina_Professores_idx` (`Professores_Matricula` ASC),
  CONSTRAINT `fk_Professores_has_Disciplina_Professores`
    FOREIGN KEY (`Professores_Matricula`)
    REFERENCES `prove_sistema_avaliacao`.`Professores` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Professores_has_Disciplina_Disciplina1`
    FOREIGN KEY (`Disciplina_Codigo_Disciplina`)
    REFERENCES `prove_sistema_avaliacao`.`Disciplinas` (`Codigo_Disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Disciplina_has_Alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Disciplina_has_Alunos` (
  `Disciplina_Codigo_Disciplina` INT NOT NULL,
  `Alunos_Matricula` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`Disciplina_Codigo_Disciplina`, `Alunos_Matricula`),
  INDEX `fk_Disciplina_has_Alunos_Alunos1_idx` (`Alunos_Matricula` ASC),
  INDEX `fk_Disciplina_has_Alunos_Disciplina1_idx` (`Disciplina_Codigo_Disciplina` ASC),
  CONSTRAINT `fk_Disciplina_has_Alunos_Disciplina1`
    FOREIGN KEY (`Disciplina_Codigo_Disciplina`)
    REFERENCES `prove_sistema_avaliacao`.`Disciplinas` (`Codigo_Disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Disciplina_has_Alunos_Alunos1`
    FOREIGN KEY (`Alunos_Matricula`)
    REFERENCES `prove_sistema_avaliacao`.`Alunos` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Palavras_Chave`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Palavras_Chave` (
  `Codigo_Palavras_Chave` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`Codigo_Palavras_Chave`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Tipo` (
  `Codigo_Tipo` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Codigo_Tipo`))
ENGINE = InnoDB;

INSERT INTO Tipo VALUES (1, 'Discursiva'), (2, 'Única Escolha'), (3, 'Verdadeiro ou Falso');

-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Questao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Questao` (
  `Codigo_Questao` INT NOT NULL AUTO_INCREMENT,
  `Enunciado` TEXT,
  `Texto` TEXT NULL,
  `Tipo_Codigo` INT NOT NULL,
  PRIMARY KEY (`Codigo_Questao`),
  INDEX `fk_Questao_Tipo1_idx` (`Tipo_Codigo` ASC),
  CONSTRAINT `fk_Questao_Tipo1`
    FOREIGN KEY (`Tipo_Codigo`)
    REFERENCES `prove_sistema_avaliacao`.`Tipo` (`Codigo_Tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Questoes_has_Avaliacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Questoes_has_Avaliacoes` (
  `Questoes_Codigo_Questao` INT NOT NULL,
  `Avaliacoes_Codigo_Avaliacao` INT NOT NULL,
  PRIMARY KEY (`Questoes_Codigo_Questao`, `Avaliacoes_Codigo_Avaliacao`),
  INDEX `fk_Questoes_has_Avaliacoes_Avaliacoes1_idx` (`Avaliacoes_Codigo_Avaliacao` ASC),
  INDEX `fk_Questoes_has_Avaliacoes_Questoes1_idx` (`Questoes_Codigo_Questao` ASC),
  CONSTRAINT `fk_Questoes_has_Avaliacoes_Questoes1`
    FOREIGN KEY (`Questoes_Codigo_Questao`)
    REFERENCES `prove_sistema_avaliacao`.`Questao` (`Codigo_Questao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Questoes_has_Avaliacoes_Avaliacoes1`
    FOREIGN KEY (`Avaliacoes_Codigo_Avaliacao`)
    REFERENCES `prove_sistema_avaliacao`.`Avaliacoes` (`Codigo_Avaliacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Alternativa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Alternativa` (
  `Codigo_Alternativa` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(255) NOT NULL,
  `Correta` TINYINT NOT NULL,
  `Questao_Codigo` INT NOT NULL,
  PRIMARY KEY (`Codigo_Alternativa`),
  INDEX `fk_Alternativa_Questao1_idx` (`Questao_Codigo` ASC),
  CONSTRAINT `fk_Alternativa_Questao1`
    FOREIGN KEY (`Questao_Codigo`)
    REFERENCES `prove_sistema_avaliacao`.`Questao` (`Codigo_Questao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Discursiva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Discursiva` (
  `Codigo_Discursiva` INT NOT NULL AUTO_INCREMENT,
  `Resposta` TEXT NOT NULL,
  `Alunos_Matricula` VARCHAR(15) NOT NULL,
  `Questao_Codigo` INT NOT NULL,
  `Correta` INT NULL,
  PRIMARY KEY (`Codigo_Discursiva`),
  INDEX `fk_Discursiva_Alunos1_idx` (`Alunos_Matricula` ASC),
  INDEX `fk_Discursiva_Questao1_idx` (`Questao_Codigo` ASC),
  CONSTRAINT `fk_Discursiva_Alunos1`
    FOREIGN KEY (`Alunos_Matricula`)
    REFERENCES `prove_sistema_avaliacao`.`Alunos` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Discursiva_Questao1`
    FOREIGN KEY (`Questao_Codigo`)
    REFERENCES `prove_sistema_avaliacao`.`Questao` (`Codigo_Questao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `prove_sistema_avaliacao`.`Resposta_Alternativa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prove_sistema_avaliacao`.`Resposta_Alternativa` (
  `Codigo_Resposta` INT NOT NULL AUTO_INCREMENT,
  `Alternativa_Alternativa_Codigo` INT NOT NULL,
  `Alunos_Matricula` VARCHAR(15) NOT NULL,
  `Resposta` TINYINT NOT NULL,
  PRIMARY KEY (`Codigo_Resposta`),
  UNIQUE INDEX `idResposta_UNIQUE` (`Codigo_Resposta` ASC),
  INDEX `fk_Resposta_Alternativa1_idx` (`Alternativa_Alternativa_Codigo` ASC),
  INDEX `fk_Resposta_Alunos1_idx` (`Alunos_Matricula` ASC),
  CONSTRAINT `fk_Resposta_Alternativa1`
    FOREIGN KEY (`Alternativa_Alternativa_Codigo`)
    REFERENCES `prove_sistema_avaliacao`.`Alternativa` (`Codigo_Alternativa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Resposta_Alunos1`
    FOREIGN KEY (`Alunos_Matricula`)
    REFERENCES `prove_sistema_avaliacao`.`Alunos` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO professores VALUES ('admin','admin','admin@mail.com','2002-03-17',null,'d033e22ae348aeb5660fc2140aec35850c4da997');
-- senha: admin

INSERT INTO serie VALUES (null, '1INFO');

INSERT INTO disciplinas VALUES (null, 'Física', 1);

INSERT INTO professores_has_disciplina VALUES ('admin', 1);

-- Senha de todos os alunos: último sobrenome (minúsculo, sem acentos) -> sha1
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('agueda', 'ÁGUEDA DIOVANA DE SOUZA NETTO', '65d8c8050a8218df8f057d826af01e332544045a');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('alana', 'ALANA ROEDER', 'b059d286d11b6128637d2efaddf4937e0c56d6b4');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('aline', 'ALINE CAROL STOCK', 'ed487e1e87c675af89db011b2903f20f99b11c7d');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('arthur', 'ARTHUR FUECHTER SCHWEDER', '0f1eed1bc1099b9f64c06bc806cbce430cf27969');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('arthur2', 'ÁRTHUR PAULO MATTEUSSI', 'bd24767f376d72d0efa191538d094c6bd3a80eab');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('augusto', 'AUGUSTO LEHMKUHL TEIXEIRA', '469bce584dc472defd76bca00d322dee386c222c');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('barbara', 'BARBARA ELLEN DE LARA', '19fdcfbf9c32357a98293bf863315962928d929a');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('bruna', 'BRUNA LUIZA CORREIA', 'c3b0ed7c797da1fb69ee7ff6ce71056345562fad');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('bruna2', 'BRUNA MAISA SENEM', '9d3b9d034f79049a43062904928e96cef28c118a');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('carlos', 'CARLOS EDUARDO RIBEIRO DOS SANTOS', '937bfaea6b875d17a48b0e4b499c346e56c4ca1c');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('eduarda', 'EDUARDA DUMES LAURETT', '2a44e5c410937df1e037ff54cc2db13f3b2a04c1');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('eduardo', 'EDUARDO SIMONI DE SOUZA', 'f72faf30d4024ec3f0937f1db15e35ddf8709ddb');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('elen', 'ELEN CRISTINA PEREIRA BATISTA', '555b37cf78182c416ccce5dc48d22e47a1f6457f');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('emanuel', 'EMANUEL ARY DE OLIVEIRA', 'a43f9fc96f67c191be1a430b30da0129bf1c98af');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('gabriel', 'GABRIEL NUNES FERREIRA', '62283808776ee974d7e7792ffa12eb90fe36556a');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('igor', 'IGOR VINICIUS DOS SANTOS', '937bfaea6b875d17a48b0e4b499c346e56c4ca1c');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('isabely', 'ISABELY LAIS RENGEL', '81fbb7d56036571822f266096df08c5473ef4811');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('jaedson', 'JAEDSON CORREIA DA COSTA', '4bf35f37a90e723b5f0a9024a7be0ec8a5176069');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('jessica', 'JÉSSICA GEOVANA DA SILVA BÖLL', '3e0d6c1790d4f77a605c654e6c57812774180e28');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('joao', 'JOÃO VÍTOR PETRY', '9b0b9b7c981be18516e7b4b9b1cd0ec1000cd1b6');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('julia', 'JULIA RENKEL DE OLIVEIRA', 'a43f9fc96f67c191be1a430b30da0129bf1c98af');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('kainan', 'KAINAN HENRIQUE CHIQUIO', 'ac5eebe25147c49d3dc13c825dae30287c413652');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('lucas', 'LUCAS ANDRIN', 'f59768e1898f48e756919162767a0cef3387f4fa');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('manuela', 'MANUELA CAMARGO', '23b186642f297c88f8fabd630c06a619a9981a47');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('marcelo', 'MARCELO FLAUSINO FILHO', 'b85520b6e5155364a969f7fce406a5102f459e1a');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('maria', 'MARIA EDUARDA MARINHEIRO DELINO', '7a7ad1ebfc54ad7ad0b416129351dd8c512f49fd');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('matheus', 'MATHEUS EYNG MÁXIMO', 'd2ecbaea97c9eebfb2339a019ef634f4a35815cb');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('matheus2', 'MATHEUS TRAVAGLIA GILI', '71b3d968556e8a507270f0ee92dce6299da525ef');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('pedro', 'PEDRO AIRAN CANALE', '29b2ca4d969edce556cabebafe89901c924d2a06');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('pedro2', 'PEDRO DANIEL DE OLIVEIRA HOELLER', '17bd6fd469df25946efd5dc936e24c62882773f9');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('pedro3', 'PEDRO HENRIQUE SILVA SANTOS', '937bfaea6b875d17a48b0e4b499c346e56c4ca1c');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('pedro4', 'PEDRO VIEIRA STEINBACH', '3244d640f25ee56bae77e90a26cce7dffd774450');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('sabrina', 'SABRINA LAISA MEES', '2d50e80195dda69c96bf7f95a91827000f13e2df');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('victoria', 'VICTÓRIA MEIRINHO', '953a40a30095ce22cf5ee0abbd6accb70443fedb');
INSERT INTO Alunos (Matricula, Nome, Senha) VALUES ('vinicius', 'VINÍCIUS KIGIS', '7607647004b164bfa7b07f111f994c2ee4b6bced');

INSERT INTO Disciplina_has_Alunos VALUES (1, 'agueda'),
(1, 'alana'),
(1, 'aline'),
(1, 'arthur'),
(1, 'arthur2'),
(1, 'augusto'),
(1, 'barbara'),
(1, 'bruna'),
(1, 'bruna2'),
(1, 'carlos'),
(1, 'eduarda'),
(1, 'eduardo'),
(1, 'elen'),
(1, 'emanuel'),
(1, 'gabriel'),
(1, 'igor'),
(1, 'isabely'),
(1, 'jaedson'),
(1, 'jessica'),
(1, 'joao'),
(1, 'julia'),
(1, 'kainan'),
(1, 'lucas'),
(1, 'manuela'),
(1, 'marcelo'),
(1, 'maria'),
(1, 'matheus'),
(1, 'matheus2'),
(1, 'pedro'),
(1, 'pedro2'),
(1, 'pedro3'),
(1, 'pedro4'),
(1, 'sabrina'),
(1, 'victoria'),
(1, 'vinicius');

INSERT INTO avaliacoes VALUES (null, 'Cinemática', 1, '2019-08-21 00:00:01', '2019-08-21 16:50:00', null, 0);

INSERT INTO Questao VALUES (null, 'Quando uma bola de tênis é rebatida pelo adversário, quais grandezas trocam de sinal quando avaliadas antes e depois da batida?', null, 2);
INSERT INTO Questao VALUES (null, 'Analise as afirmativas abaixo, considerando V caso a afirmativa seja verdadeira e F caso seja falsa, e assinale cada uma delas corretamente', null, 3);
INSERT INTO Questao VALUES (null, 'Explique a primeira lei de Newton', null, 1);
INSERT INTO Questao VALUES (null, 'Considerando que houve conservação da quantidade de movimento, a velocidade do corpo de massa m2 é:', 'Dois corpos, um de massa m1 = 5,0 kg e outro de massa m2 = 10,0 kg movem-se paralelamente um ao lado do outro, em contato, a uma velocidade constante de 12,0 m/s para a direita. Após uma pequena colisão o corpo de massa m1 passa a mover-se a 10,0 m/s para a direita.', 2);
INSERT INTO Questao VALUES (null, 'Considerando a conservação da quantidade de movimento, se dois objetos estão em contato entre si e em repouso, sobre uma superfície lisa e praticamente sem atrito, e depois da ação de alguma força interna, um deles move-se para um lado, podemos afirmar que (assinale V caso a afirmativa seja verdadeira e F caso seja falsa)', null, 3);
INSERT INTO Questao VALUES (null, 'Na sequência descrita acima, a velocidade final das massas é:', 'Um corpo de massa m = 6,0 kg está sobre outro de massa M = 12,0 kg e este encontra-se sobre uma superfície plana, horizontal e sem atrito. Ambos estão em repouso. Inicialmente empurramos o corpo de massa M (com o corpo de massa m sobre ele) com um impulso de 36,0 N.s, e ambos os corpos movem-se com a mesma velocidade. Em seguida, aplica-se o mesmo impulso apenas no corpo de massa M (também em repouso), e, por último, aplica-se novamente o mesmo impulso, mas apenas no corpo de massa m (também em repouso).', 2);

INSERT INTO Questoes_has_Avaliacoes VALUES (1,1);
INSERT INTO Questoes_has_Avaliacoes VALUES (2,1);
INSERT INTO Questoes_has_Avaliacoes VALUES (3,1);
INSERT INTO Questoes_has_Avaliacoes VALUES (4,1);
INSERT INTO Questoes_has_Avaliacoes VALUES (5,1);
INSERT INTO Questoes_has_Avaliacoes VALUES (6,1);

## Falta colocar as alternativas corretas

INSERT INTO Alternativa VALUES (null, 'Força e velocidade.', 0, 1);
INSERT INTO Alternativa VALUES (null, 'Força e quantidade de movimento.', 0, 1);
INSERT INTO Alternativa VALUES (null, 'Impulso e força.', 0, 1);
INSERT INTO Alternativa VALUES (null, 'Quantidade de movimento e velocidade.', 1, 1);
INSERT INTO Alternativa VALUES (null, 'Velocidade e impulso.', 0, 1);

INSERT INTO Alternativa VALUES (null, 'Se um corpo tem uma quantidade de movimento positiva e recebe um impulso positivo, sua velocidade aumenta.', 1, 2);
INSERT INTO Alternativa VALUES (null, 'Se um corpo tem uma quantidade de movimento negativa e recebe um impulso positivo, sua velocidade diminui.', 1, 2);
INSERT INTO Alternativa VALUES (null, 'Se um corpo tem uma quantidade de movimento positiva e recebe um impulso negativa, sua velocidade não muda.', 0, 2);
INSERT INTO Alternativa VALUES (null, 'Quanto maior a velocidade de um corpo, maior é o impulso para aumentar sua quantidade de movimento.', 0, 2);

# Questao_Codigo 3 - é discursiva

INSERT INTO Alternativa VALUES (null, 'O corpo de maior massa terá menor quantidade.', 1, 4);
INSERT INTO Alternativa VALUES (null, 'O impulso aplicado em ambos os corpos é o mesmo.', 1, 4);
INSERT INTO Alternativa VALUES (null, 'O outro corpo move-se para o mesmo lado que primeiro.', 0, 4);
INSERT INTO Alternativa VALUES (null, 'O outro corpo move-se para o outro lado em relação ao primeiro.', 1, 4);
INSERT INTO Alternativa VALUES (null, 'Se ambos os corpos têm a mesma velocidade, em módulo, então ambas as massas dos corpos são iguais.', 1, 4);

INSERT INTO Alternativa VALUES (null, '10,0 m/s.', 0, 5);
INSERT INTO Alternativa VALUES (null, '12,0 m/s.', 0, 5);
INSERT INTO Alternativa VALUES (null, '13,0 m/s.', 1, 5);
INSERT INTO Alternativa VALUES (null, '14,0 m/s.', 0, 5);
INSERT INTO Alternativa VALUES (null, '15,0 m/s.', 0, 5);

INSERT INTO Alternativa VALUES (null, '3,0 m/s; 2,0 m/s; 1,0 m/s.', 0, 6);
INSERT INTO Alternativa VALUES (null, '2,0 m/s; 3,0 m/s; 4,0 m/s.', 0, 6);
INSERT INTO Alternativa VALUES (null, '3,0 m/s; 2,0 m/s; 4,0 m/s.', 0, 6);
INSERT INTO Alternativa VALUES (null, '4,0 m/s; 2,0 m/s; 6,0 m/s.', 0, 6);
INSERT INTO Alternativa VALUES (null, '2,0 m/s; 3,0 m/s; 6,0 m/s.', 1, 6);





/*

INSERT INTO `Alunos` (`Matricula`, `Email`, `Senha`, `Nome`, `Data_Nascimento`, `Ultimo_Login`) VALUES
('2017305998','e0f68134d29dc326d115de4c8fab8700a3c4b002','Teste 123','2002-03-17','2019-03-12 16:22:32');

('0001', 'aguydiovana@gmail.com', '65d8c8050a8218df8f057d826af01e332544045a','ÁGUEDA DIOVANA DE SOUZA NETTO','2003-03-17','2019-03-12 16:22:32');# USER: 0001 // SENHA: netto

('0002', 'lanna.roeder@gmail.com', 'b059d286d11b6128637d2efaddf4937e0c56d6b4','ALANA ROEDER','2003-03-17','2019-03-12 16:22:32');# USER: 0002 // SENHA: roeder

('0003', 'aline.cl.stock@gmail.com', 'ed487e1e87c675af89db011b2903f20f99b11c7d','ALINE CAROL STOCK','2003-03-17','2019-03-12 16:22:32');# USER: 0003 // SENHA: stock

('0004', 'arthur.fuechter.schweder@gmail.com', '0f1eed1bc1099b9f64c06bc806cbce430cf27969','ARTHUR FUECHTER SCHWEDER','2003-03-17','2019-03-12 16:22:32');# USER: 0004 // SENHA: schweder

('0005', '', 'bd24767f376d72d0efa191538d094c6bd3a80eab','ÁRTHUR PAULO MATTEUSSI','2003-03-17','2019-03-12 16:22:32');# USER: 0005 // SENHA: matteussi

('0006', 'augusto.teixeira8579@gmail.com', '017d9b49ed2255dda4fde229135f24c65747af0d','AUGUSTO LEHMKUHL TEIXEIRA','2003-03-17','2019-03-12 16:22:32');# USER: 0006 // SENHA: teixeira

('0007', '', 'bd24767f376d72d0efa191538d094c6bd3a80eab','BARBARA ELLEN DE LARA','2003-03-17','2019-03-12 16:22:32');# USER: 0007 // SENHA: matteussi

('0008', '', 'bd24767f376d72d0efa191538d094c6bd3a80eab','ÁRTHUR PAULO MATTEUSSI','2003-03-17','2019-03-12 16:22:32');# USER: 0008 // SENHA: matteussi

('0009', '', 'bd24767f376d72d0efa191538d094c6bd3a80eab','ÁRTHUR PAULO MATTEUSSI','2003-03-17','2019-03-12 16:22:32');# USER: 0009 // SENHA: matteussi

SELECT * FROM professores_has_disciplina;

BRUNA LUIZA CORREIA
BRUNA MAISA SENEM
CARLOS EDUARDO RIBEIRO DOS SANTOS
EDUARDA DUMES LAURETT
EDUARDO SIMONI DE SOUZA
ELEN CRISTINA PEREIRA BATISTA
EMANUEL ARY DE OLIVEIRA
GABRIEL NUNES FERREIRA
IGOR VINICIUS DOS SANTOS
ISABELY LAIS RENGEL
JAEDSON CORREIA DA COSTA
JÉSSICA GEOVANA DA SILVA BÖLL
JOÃO VÍTOR PETRY
JULIA RENKEL DE OLIVEIRA
KAINAN HENRIQUE CHIQUIO
LUCAS ANDRINMANUELA CAMARGO
MARCELO FLAUSINO FILHO
MARIA EDUARDA MARINHEIRO DELINO
MATHEUS EYNG MÁXIMO
MATHEUS TRAVAGLIA GILI
PEDRO AIRAN CANALE
PEDRO DANIEL DE OLIVEIRA HOELLER
PEDRO HENRIQUE SILVA SANTOS
PEDRO VIEIRA STEINBACH
SABRINA LAISA MEES
VICTÓRIA MEIRINHO
VINÍCIUS KIGIS
*/